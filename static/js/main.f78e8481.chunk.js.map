{"version":3,"sources":["constants/feedUrls.ts","utils/dateHelpers.ts","utils/getFeedItemsArray.ts","components/styled.ts","components/Loader.tsx","utils/formatters.ts","components/Content.tsx","components/Footer.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["feedUrls","parseDate","dateString","Date","getTime","formatDate","time","date","hours","getHours","minutes","getMinutes","ampm","strTime","parseInt","toString","padStart","getDate","getMonth","getFullYear","getFeedItemsArray","a","feedItemsArray","feedUrl","fetch","res","json","contents","contentsParsed","window","DOMParser","parseFromString","selectedFeeds","querySelectorAll","feedItems","map","el","link","querySelector","innerHTML","title","pubDate","creator","description","push","feed","flat","feedSorted","sort","b","Main","styled","div","HeaderContainer","header","PageTitle","h1","PageDescription","p","ContentContainer","Link","FooterContainer","footer","LoaderContainer","LoaderText","ContentList","ul","ContentItem","li","DateAndAuthor","span","TitleContainer","h2","Title","Excerpt","LoaderWithText","type","color","height","width","removeCDATA","string","replace","Content","useState","items","setItems","loading","setLoading","useEffect","getRss","slice","item","i","href","dangerouslySetInnerHTML","__html","number","split","splice","join","Footer","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAaA,EAAW,CACtB,sCACA,yCACA,gCACA,2BACA,+BACA,6BACA,oCACA,qCCNWC,EAAY,SAACC,GACxB,GAAIA,EAEF,OADa,IAAIC,KAAKD,GACVE,WAcHC,EAAa,SAACC,GACzB,IAAMC,EAAO,IAAIJ,KAAKG,GAiBlBE,EAAQD,EAAKE,WACbC,EAAUH,EAAKI,aACbC,EAAOJ,GAAS,GAAK,KAAO,KAO9BK,GAJJL,GADAA,GAAgB,KACQ,IAIF,KAFtBE,EACEA,EAAU,GAAKI,SAASJ,EAAQK,WAAWC,SAAS,EAAG,MAAQN,GAC3BE,EAEtC,MAAM,GAAN,OAAUL,EAAKU,UAAf,YA1Be,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAeOV,EAAKW,YADd,YAEIX,EAAKY,cAFT,YAE0BN,IC/CfO,EAAiB,uCAAG,kDAAAC,EAAA,sDACzBC,EAAiB,GADQ,cAETtB,GAFS,gEAEpBuB,EAFoB,iBAGXC,MAAM,sCAAD,OAAuCD,IAHjC,cAGvBE,EAHuB,iBAIFA,EAAIC,OAJF,iBAIrBC,EAJqB,EAIrBA,SACFC,GAAiB,IAAIC,OAAOC,WAAYC,gBAC5CJ,EACA,YAEIK,EAAgBJ,EAAeK,iBAAiB,QAChDC,EAAY,YAAIF,GAAeG,KAAI,SAACC,GAAD,oBAAS,CAChDC,KAAI,UAAED,EAAGE,cAAc,eAAnB,aAAE,EAA0BC,UAChCC,MAAK,UAAEJ,EAAGE,cAAc,gBAAnB,aAAE,EAA2BC,UAClCE,QAASxC,EAAS,UAACmC,EAAGE,cAAc,kBAAlB,aAAC,EAA6BC,WAChDG,QAAO,UAAEN,EAAGE,cAAc,kBAAnB,aAAE,EAA6BC,UACtCI,YAAW,UAAEP,EAAGE,cAAc,sBAAnB,aAAE,EAAiCC,cAEhDjB,EAAesB,KAAKV,GAjBS,sJAmBzBW,EAAOvB,EAAewB,OACtBC,EAAiCF,EDbHG,MAAK,SAAC3B,EAAG4B,GAC3C,OAAI5B,EAAEoB,SAAWQ,EAAER,QACVpB,EAAEoB,QAAUQ,EAAER,SAAW,EAAI,EACxB,KCVe,kBAsBxBM,GAtBwB,gEAAH,qD,uCCDjBG,EAAOC,IAAOC,IAAV,6HAOJC,EAAkBF,IAAOG,OAAV,+IAQfC,EAAYJ,IAAOK,GAAV,6MAeTC,EAAkBN,IAAOO,EAAV,uGAOfC,EAAmBR,IAAOC,IAAV,6LAchBQ,EAAOT,IAAO9B,EAAV,iHASJwC,EAAkBV,IAAOW,OAAV,+JASfC,EAAkBZ,IAAOC,IAAV,sKASfY,EAAab,IAAOO,EAAV,kJASVO,EAAcd,IAAOe,GAAV,qEAKXC,EAAchB,IAAOiB,GAAV,kLAWXC,EAAgBlB,IAAOmB,KAAV,4CAIbC,EAAiBpB,IAAOqB,GAAV,yDAKdC,EAAQtB,IAAOmB,KAAV,0BAELI,EAAUvB,IAAOO,EAAV,2H,OChHPiB,EAAiB,WAC5B,OACE,eAACZ,EAAD,WACE,cAAC,IAAD,CAAQa,KAAK,QAAQC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MACzD,cAACf,EAAD,gDCROgB,EAAc,SAACC,GAC1B,OAAOA,EAAOC,QAAQ,uBAAwB,KCgBnCC,GAAU,WACrB,MAA0BC,mBAAkB,IAA5C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAM,uCAAG,sBAAArE,EAAA,kEACbiE,EADa,SACElE,IADF,kCAEboE,GAAW,GAFE,2CAAH,qDAKZ,OAAOD,EACL,cAAC,EAAD,IAEA,cAAC5B,EAAD,UACE,cAACM,EAAD,UACGoB,EAAMM,MAAM,EAAG,GAAGxD,KAAI,SAACyD,EAAMC,GAC5B,OACE,qCACE,eAAC1B,EAAD,WACE,cAACP,EAAD,CAAMkC,KAAMF,EAAKvD,KAAjB,SACE,eAACkC,EAAD,WACE,eAACF,EAAD,WACGuB,EAAKnD,QAAL,sBAAoBpC,EAAWuF,EAAKnD,SAApC,KAAkD,KAClDmD,EAAKlD,QAAL,YAAoBsC,EAAYY,EAAKlD,SAArC,KAAmD,QAEtD,cAAC+B,EAAD,UACGmB,EAAKpD,MAAL,YAAkBwC,EAAYY,EAAKpD,QAAW,YAIrD,cAACkC,EAAD,CACEqB,wBAAyB,CACvBC,OAAQJ,EAAKjD,YACTqC,GDjDCC,ECiDoBW,EAAKjD,YDjDTsD,ECiDsB,IDhDtDhB,EAAOiB,MAAM,IAAIC,OAAO,EAAGF,GAAQG,KAAK,MCiDzB,QAhBQR,EAAKpD,OAoBhB,IAANqD,GAAW,0BDtDF,IAACZ,EAAgBgB,UEF5BI,GAAS,WACpB,OACE,cAACxC,EAAD,UACE,oHCHOyC,GAAS,WACpB,OACE,eAACjD,EAAD,WACE,eAACE,EAAD,mBACO,8CADP,WAGA,cAACE,EAAD,4DCHS,SAAS8C,KACtB,OACE,eAACrD,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OCLNsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.f78e8481.chunk.js","sourcesContent":["export const feedUrls = [\r\n  \"https://medium.com/feed/@kentcdodds\",\r\n  \"https://medium.com/feed/free-code-camp\",\r\n  \"https://medium.com/hackernoon\",\r\n  \"https://sekurak.pl/feed/\",\r\n  \"https://css-tricks.com/feed/\",\r\n  \"https://stackabuse.com/rss\",\r\n  \"https://alistapart.com/main/feed/\",\r\n  \"https://www.akendi.com/blog/feed/\",\r\n];\r\n","import { IItem } from \"./types\";\r\n\r\nexport const parseDate = (dateString: string | undefined) => {\r\n  if (dateString) {\r\n    const date = new Date(dateString);\r\n    return date.getTime();\r\n  }\r\n};\r\n\r\nexport const sortChronologically = (itemsArray: IItem[]) => {\r\n  const sortedItemsArray = itemsArray.sort((a, b) => {\r\n    if (a.pubDate && b.pubDate) {\r\n      return a.pubDate > b.pubDate ? -1 : 1;\r\n    } else return 0;\r\n  });\r\n\r\n  return sortedItemsArray;\r\n};\r\n\r\nexport const formatDate = (time: number) => {\r\n  const date = new Date(time);\r\n\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12;\r\n\r\n  minutes =\r\n    minutes < 10 ? parseInt(minutes.toString().padStart(2, \"0\")) : minutes;\r\n  var strTime = hours + \":\" + minutes + ampm;\r\n  // e.g. \"13 Nov 2016 11:00pm\";\r\n  return `${date.getDate()} ${\r\n    months[date.getMonth()]\r\n  } ${date.getFullYear()} ${strTime}`;\r\n};\r\n","import { feedUrls } from \"../constants/feedUrls\";\r\nimport { parseDate, sortChronologically } from \"./dateHelpers\";\r\n\r\nexport const getFeedItemsArray = async () => {\r\n  const feedItemsArray = [];\r\n  for (const feedUrl of feedUrls) {\r\n    const res = await fetch(`https://api.allorigins.win/get?url=${feedUrl}`);\r\n    const { contents } = await res.json();\r\n    const contentsParsed = new window.DOMParser().parseFromString(\r\n      contents,\r\n      \"text/xml\"\r\n    );\r\n    const selectedFeeds = contentsParsed.querySelectorAll(\"item\");\r\n    const feedItems = [...selectedFeeds].map((el) => ({\r\n      link: el.querySelector(\"link\")?.innerHTML,\r\n      title: el.querySelector(\"title\")?.innerHTML,\r\n      pubDate: parseDate(el.querySelector(\"pubDate\")?.innerHTML),\r\n      creator: el.querySelector(\"creator\")?.innerHTML,\r\n      description: el.querySelector(\"description\")?.innerHTML,\r\n    }));\r\n    feedItemsArray.push(feedItems);\r\n  }\r\n  const feed = feedItemsArray.flat();\r\n  const feedSorted = sortChronologically(feed);\r\n\r\n  return feedSorted;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const HeaderContainer = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 35px;\r\n`;\r\n\r\nexport const PageTitle = styled.h1`\r\n  font-size: 70px;\r\n  margin: 0;\r\n  text-align: center;\r\n  color: #05f4b7;\r\n\r\n  & span {\r\n    color: #371bb1;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n\r\nexport const PageDescription = styled.p`\r\n  padding-top: 15px;\r\n  margin: 0;\r\n  text-align: center;\r\n  color: #eee;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  max-width: 1000px;\r\n  width: 100%;\r\n  padding: 35px;\r\n\r\n  & hr {\r\n    background-color: #eee;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: #05f4b7;\r\n  text-decoration: none;\r\n\r\n  &:visited {\r\n    color: #eee;\r\n  }\r\n`;\r\n\r\nexport const FooterContainer = styled.footer`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  color: #eee;\r\n  padding: 35px;\r\n`;\r\n\r\nexport const LoaderContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LoaderText = styled.p`\r\n  color: #eee;\r\n  font-size: 40px;\r\n  text-align: center;\r\n  @media (max-width: 1000px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const ContentList = styled.ul`\r\n  list-style: none;\r\n  padding-left: 0;\r\n`;\r\n\r\nexport const ContentItem = styled.li`\r\n  padding: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nexport const DateAndAuthor = styled.span`\r\n  color: #eee;\r\n`;\r\n\r\nexport const TitleContainer = styled.h2`\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Title = styled.span``;\r\n\r\nexport const Excerpt = styled.p`\r\n  color: #eee;\r\n\r\n  & a {\r\n    color: #05f4b7;\r\n  }\r\n\r\n  & a:visited {\r\n    color: #eee;\r\n  }\r\n`;\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { LoaderContainer, LoaderText } from \"./styled\";\r\n\r\nexport const LoaderWithText = () => {\r\n  return (\r\n    <LoaderContainer>\r\n      <Loader type=\"Rings\" color=\"#f2f2f2\" height={150} width={150} />\r\n      <LoaderText>Wait for your feed to load...</LoaderText>\r\n    </LoaderContainer>\r\n  );\r\n};\r\n","export const removeCDATA = (string: string) => {\r\n  return string.replace(/<!\\[CDATA\\[.*?\\]\\]>/g, \"\");\r\n};\r\n\r\nexport const trimText = (string: string, number: number) => {\r\n  return string.split(\"\").splice(0, number).join(\"\");\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getFeedItemsArray } from \"../utils/getFeedItemsArray\";\r\nimport { LoaderWithText } from \"./Loader\";\r\nimport {\r\n  ContentContainer,\r\n  ContentItem,\r\n  ContentList,\r\n  DateAndAuthor,\r\n  Excerpt,\r\n  Link,\r\n  Title,\r\n  TitleContainer,\r\n} from \"./styled\";\r\nimport { formatDate } from \"../utils/dateHelpers\";\r\nimport { removeCDATA, trimText } from \"../utils/formatters\";\r\nimport { IItem } from \"../utils/types\";\r\n\r\nexport const Content = () => {\r\n  const [items, setItems] = useState<IItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getRss();\r\n  }, []);\r\n\r\n  const getRss = async () => {\r\n    setItems(await getFeedItemsArray());\r\n    setLoading(false);\r\n  };\r\n\r\n  return loading ? (\r\n    <LoaderWithText />\r\n  ) : (\r\n    <ContentContainer>\r\n      <ContentList>\r\n        {items.slice(0, 5).map((item, i) => {\r\n          return (\r\n            <>\r\n              <ContentItem key={item.title}>\r\n                <Link href={item.link}>\r\n                  <TitleContainer>\r\n                    <DateAndAuthor>\r\n                      {item.pubDate ? `📅${formatDate(item.pubDate)} ` : null}\r\n                      {item.creator ? `- ${removeCDATA(item.creator)} ` : null}\r\n                    </DateAndAuthor>\r\n                    <Title>\r\n                      {item.title ? `| ${removeCDATA(item.title)}` : null}\r\n                    </Title>\r\n                  </TitleContainer>\r\n                </Link>\r\n                <Excerpt\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: item.description\r\n                      ? removeCDATA(trimText(item.description, 1000))\r\n                      : \"\",\r\n                  }}\r\n                />\r\n              </ContentItem>\r\n              {i !== 4 && <hr />}\r\n            </>\r\n          );\r\n        })}\r\n      </ContentList>\r\n    </ContentContainer>\r\n  );\r\n};\r\n","import { FooterContainer } from \"./styled\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <p>\r\n        If you're done... then you can go for a walk or do something different\r\n        for once!\r\n      </p>\r\n    </FooterContainer>\r\n  );\r\n};\r\n","import { HeaderContainer, PageDescription, PageTitle } from \"./styled\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <PageTitle>\r\n        Aggre<span>ssive Alli</span>gator\r\n      </PageTitle>\r\n      <PageDescription>\r\n        Where have you been, Web Developer? Read!\r\n      </PageDescription>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n","import { Content } from \"./components/Content\";\nimport { Footer } from \"./components/Footer\";\nimport { Header } from \"./components/Header\";\nimport { Main } from \"./components/styled\";\n\nexport default function App() {\n  return (\n    <Main>\n      <Header />\n      <Content />\n      <Footer />\n    </Main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}